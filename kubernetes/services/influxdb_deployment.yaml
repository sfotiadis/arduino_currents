apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb-deployment
  namespace: arduino-currents
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      containers:
        - name: influxdb
          image: influxdb:latest
          ports:
            - containerPort: 8086
          resources:
            limits:
             cpu: "1"
             memory: 2Gi
            requests:
             cpu: "0.5"
             memory: 1Gi
          env:
            - name: INFLUXDB_DB
              value: mydb
            - name: INFLUXDB_HTTP_AUTH_ENABLED
              value: "true"
            - name: INFLUXDB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: influxdb-credentials
                  key: username
            - name: INFLUXDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: influxdb-credentials
                  key: password 
          volumeMounts:
            - name: influxdb-data
              mountPath: /var/lib/influxdb
      volumes:
        - name: influxdb-data
          persistentVolumeClaim:
            claimName: influxdb-pvc
        - name: influxdb-config
          configMap:
            name: influxdb-config
---

apiVersion: v1
kind: Service
metadata:
  name: influxdb-service
  namespace: arduino-currents
spec:
  selector:
    app: influxdb
  ports:
    - protocol: TCP
      port: 8086 
      targetPort: 8086
      nodePort: 30000
  type: NodePort

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: influxdb-config
  namespace: arduino-currents
data:
  influxdb.conf: |
    reporting-disabled = true

    [http]
      bind-address = ":8086"
      auth-enabled = true
      log-enabled = true

    [[http.services]]
      [[http.services.write]]
        username = "${INFLUXDB_USERNAME}"
        password = "${INFLUXDB_PASSWORD}"

    [[bucket]]
      organization = "home"
      name = "currents"
      retention-policy = ""
      shard-group-duration = "168h"
      shard-group-check-interval = "30m"
      field = ""
      replicate-across = []

    [[retention]]
      name = "autogen"
      db-target = "autogen"
      duration = "0s"
      shard-group-duration = "168h"
      replication-factor = 1
